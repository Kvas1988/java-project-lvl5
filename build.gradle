plugins {
	id 'application'
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'checkstyle'
	id 'org.liquibase.gradle' version '2.0.4'
	// frontend
	id 'org.siouan.frontend-jdk11' version '6.0.0'
	// swagger
	id "com.github.johnrengelman.processes" version "0.5.0"
	id "org.springdoc.openapi-gradle-plugin" version "1.3.3"
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.3.1.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2:1.4.200'
	implementation 'org.liquibase:liquibase-core'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'

	// querydsl
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'

	annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
	annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'

	implementation 'com.rollbar:rollbar-spring-boot-webmvc:1.8.1'
//	compile 'com.rollbar:rollbar-spring-boot-webmvc:1.8.1'

	// Подключаем зависимости, необходимые для работы плагина
//	liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
	implementation 'org.liquibase:liquibase-core:3.8.1'
//	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
//	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
//	liquibaseRuntime sourceSets.main.output
}

application {
	mainClass = 'hexlet.code.app.AppApplication'
}

compileJava {
	options.release = 17
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
	}
}

// heroku task
task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean

// liquibase task
diffChangeLog {
	dependsOn compileJava
}

// liquibase plugin setup
//liquibase {
//	activities {
//		main {
//			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
//			url 'jdbc:h2:./taskdb'
//			username 'sa'
//			password ''
//			referenceUrl 'hibernate:spring:hexlet.code.app.model' +
//					'?dialect=org.hibernate.dialect.H2Dialect' +
//					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
//		}
//	}
//}

// Сборка фронтенда.
// Выполняется только если ничего не изменилось.
// *****************************************************************************
frontend {
//	nodeVersion = '16.13.1'
	nodeVersion = '14.17.2'
	installScript = 'install'
	assembleScript = 'run build'
	packageJsonDirectory = file("${projectDir}/frontend")
}

def configFrontendTasks = {
	inputs.files(fileTree("$projectDir/frontend").exclude('build', 'node_modules'))
	outputs.dir("$buildDir/resources/main/static")
}

assembleFrontend {
	configure configFrontendTasks

	doLast {
		copy {
			from "$projectDir/frontend/build"
			into "$buildDir/resources/main/static"
		}
	}
}

installFrontend {
	configure configFrontendTasks
}

processResources.dependsOn assembleFrontend
// *****************************************************************************